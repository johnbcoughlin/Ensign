if(${CUDA_ENABLED})
    cuda_add_executable(advection advection.cu ../src/lr/lr.cu ../src/lr/coefficients.cu ../src/generic/utility.cu ../src/generic/matrix.cu)
    cuda_add_cublas_to_target(advection)
else()
    add_executable(advection advection.cpp ../src/lr/lr.cpp ../src/lr/coefficients.cpp ../src/generic/utility.cpp ../src/generic/matrix.cpp)
    target_link_libraries(advection fftw3)
    add_executable(linear_landau linear_landau.cpp ../src/lr/lr.cpp ../src/lr/coefficients.cpp ../src/generic/utility.cpp ../src/generic/matrix.cpp)
    target_link_libraries(linear_landau fftw3)
    add_executable(linear_landau_2d linear_landau_2d.cpp ../src/lr/lr.cpp ../src/lr/coefficients.cpp ../src/generic/utility.cpp ../src/generic/matrix.cpp)
    target_link_libraries(linear_landau_2d fftw3)
    add_executable(linear_landau_3d linear_landau_3d.cpp ../src/lr/lr.cpp ../src/lr/coefficients.cpp ../src/generic/utility.cpp ../src/generic/matrix.cpp)
    target_link_libraries(linear_landau_3d fftw3)
endif()

include(FindBLAS)
include(FindLAPACK)

if (BLAS_FOUND)
    target_compile_options(advection PRIVATE ${BLAS_LINKER_FLAGS})
    target_link_libraries(advection ${BLAS_LIBRARIES})
    target_compile_options(linear_landau PRIVATE ${BLAS_LINKER_FLAGS})
    target_link_libraries(linear_landau ${BLAS_LIBRARIES})
    target_compile_options(linear_landau_2d PRIVATE ${BLAS_LINKER_FLAGS})
    target_link_libraries(linear_landau_2d ${BLAS_LIBRARIES})
    target_compile_options(linear_landau_3d PRIVATE ${BLAS_LINKER_FLAGS})
    target_link_libraries(linear_landau_3d ${BLAS_LIBRARIES})

endif ()
if (LAPACK_FOUND)
    target_compile_options(advection PRIVATE ${LAPACK_LINKER_FLAGS})
    target_link_libraries(advection ${LAPACK_LIBRARIES})
    target_compile_options(linear_landau PRIVATE ${LAPACK_LINKER_FLAGS})
    target_link_libraries(linear_landau ${LAPACK_LIBRARIES})
    target_compile_options(linear_landau_2d PRIVATE ${LAPACK_LINKER_FLAGS})
    target_link_libraries(linear_landau_2d ${LAPACK_LIBRARIES})
    target_compile_options(linear_landau_3d PRIVATE ${LAPACK_LINKER_FLAGS})
    target_link_libraries(linear_landau_3d ${LAPACK_LIBRARIES})
endif ()
